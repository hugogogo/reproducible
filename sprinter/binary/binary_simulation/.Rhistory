Service = Service * 100 / OccupationSum,
Office = Office * 100 / OccupationSum,
Construction = Construction * 100 / OccupationSum,
Production = Production * 100 / OccupationSum) %>%
select(-OccupationSum)
df <- mutate(df, TranSum = Drive + Carpool + Transit + Walk + OtherTransp + WorkAtHome) %>%
mutate(Drive = Drive * 100 / TranSum,
Carpool = Carpool * 100 / TranSum,
Transit = Transit * 100 / TranSum,
Walk = Walk * 100 / TranSum,
OtherTransp = OtherTransp * 100 / TranSum,
WorkAtHome = WorkAtHome * 100 / TranSum) %>%
select(-TranSum)
df <- mutate(df, EmpSum = PrivateWork + PublicWork + SelfEmployed + FamilyWork) %>%
mutate(PrivateWork = PrivateWork * 100 / EmpSum,
PublicWork = PublicWork * 100 / EmpSum,
SelfEmployed = SelfEmployed * 100 / EmpSum,
FamilyWork = FamilyWork * 100 / EmpSum) %>%
select(-EmpSum)
## read in meta data
metadata <- read_csv("../data/metadata.csv")
kable(metadata[, 1:2], "latex")
print(metadata, n = nrow(metadata))
write.csv(df, file = "./220.csv")
range(df$LessThanHighSchool + df$HighSchoolDiploma + df$SomeCollegeOrAssociateDegree + df$BachelorDegreeOrHigher)
summary(df$LessThanHighSchool + df$HighSchoolDiploma + df$SomeCollegeOrAssociateDegree + df$BachelorDegreeOrHigher)
summary(df$LessThanHighSchool + df$HighSchoolDiploma + df$SomeCollegeOrAssociateDegree + df$BachelorDegreeOrHigher, na.remove = TRUE)
## read in education data
education <- read_csv("../data/education.csv") %>%
filter(!is.na(`2003 Rural-urban Continuum Code`)) %>%
filter(State != "PR") %>%
select(-`FIPS Code`,
-`2003 Rural-urban Continuum Code`,
-`2003 Urban Influence Code`,
-`2013 Rural-urban Continuum Code`,
-`2013 Urban Influence Code`) %>%
rename(County = `Area name`) %>%
select(`State`, `County`,
#         `Less than a high school diploma, 2015-19`,
#         `High school diploma only, 2015-19`,
#         `Bachelor's degree or higher, 2015-19`,
LessThanHighSchool = `Percent of adults with less than a high school diploma, 2015-19`,
HighSchoolDiploma = `Percent of adults with a high school diploma only, 2015-19`,
SomeCollegeOrAssociateDegree = `Percent of adults completing some college or associate's degree, 2015-19`,
BachelorDegreeOrHigher = `Percent of adults with a bachelor's degree or higher, 2015-19`) %>%
mutate(EduSum = LessThanHighSchool + HighSchoolDiploma + SomeCollegeOrAssociateDegree + BachelorDegreeOrHigher) %>%
mutate(LessThanHighSchool = LessThanHighSchool * 100 / EduSum,
HighSchoolDiploma = HighSchoolDiploma * 100 / EduSum,
SomeCollegeOrAssociateDegree = SomeCollegeOrAssociateDegree * 100 / EduSum,
BachelorDegreeOrHigher = BachelorDegreeOrHigher * 100 / EduSum) %>%
select(-EduSum)
range(education$LessThanHighSchool + education$HighSchoolDiploma + education$SomeCollegeOrAssociateDegree + education$BachelorDegreeOrHigher)
summary(education$LessThanHighSchool + education$HighSchoolDiploma + education$SomeCollegeOrAssociateDegree + education$BachelorDegreeOrHigher)
summary(education$LessThanHighSchool + education$HighSchoolDiploma + education$SomeCollegeOrAssociateDegree + education$BachelorDegreeOrHigher, na.rm = TRUE)
which(is.na(education$LessThanHighSchool + education$HighSchoolDiploma + education$SomeCollegeOrAssociateDegree + education$BachelorDegreeOrHigher))
idx <- which(is.na(education$LessThanHighSchool + education$HighSchoolDiploma + education$SomeCollegeOrAssociateDegree + education$BachelorDegreeOrHigher))
education[idx, ]
which(is.na(education))
education[which(is.na(education)), ]
education <- read_csv("../data/education.csv") %>%
filter(!is.na(`2003 Rural-urban Continuum Code`)) %>%
filter(State != "PR") %>%
select(-`FIPS Code`,
-`2003 Rural-urban Continuum Code`,
-`2003 Urban Influence Code`,
-`2013 Rural-urban Continuum Code`,
-`2013 Urban Influence Code`) %>%
rename(County = `Area name`) %>%
select(`State`, `County`,
#         `Less than a high school diploma, 2015-19`,
#         `High school diploma only, 2015-19`,
#         `Bachelor's degree or higher, 2015-19`,
LessThanHighSchool = `Percent of adults with less than a high school diploma, 2015-19`,
HighSchoolDiploma = `Percent of adults with a high school diploma only, 2015-19`,
SomeCollegeOrAssociateDegree = `Percent of adults completing some college or associate's degree, 2015-19`,
BachelorDegreeOrHigher = `Percent of adults with a bachelor's degree or higher, 2015-19`) %>%
mutate(EduSum = LessThanHighSchool + HighSchoolDiploma + SomeCollegeOrAssociateDegree + BachelorDegreeOrHigher) %>%
mutate(LessThanHighSchool = LessThanHighSchool * 100 / EduSum,
HighSchoolDiploma = HighSchoolDiploma * 100 / EduSum,
SomeCollegeOrAssociateDegree = SomeCollegeOrAssociateDegree * 100 / EduSum,
BachelorDegreeOrHigher = BachelorDegreeOrHigher * 100 / EduSum) %>%
select(-EduSum)
complete.cases(education)
education[complete.cases(education), ]
education[-complete.cases(education), ]
education[-which(complete.cases(education)), ]
age <- read_csv("../raw/cc-est2011-alldata.csv") %>%
select(`STNAME`, `CTYNAME`, `YEAR`, `AGEGRP`, `TOT_POP`) %>%
filter(YEAR == 1) %>%
group_by(STNAME, CTYNAME)
age$AGEGRP
1+2+3+4
5+6+7+8+9
age <- read_csv("../raw/cc-est2011-alldata.csv") %>%
select(`STNAME`, `CTYNAME`, `YEAR`, `AGEGRP`, `TOT_POP`) %>%
filter(YEAR == 1) %>%
group_by(STNAME, CTYNAME) %>%
summarize(#agegrp1 = sum(TOT_POP[AGEGRP < 5], na.rm = TRUE) / sum(TOT_POP, na.rm = TRUE),
#agegrp2 = sum(TOT_POP[AGEGRP >= 5 & AGEGRP < 14], na.rm = TRUE) / sum(TOT_POP, na.rm = TRUE),
#agegrp3 = sum(TOT_POP[AGEGRP >= 14], na.rm = TRUE) / sum(TOT_POP, na.rm = TRUE),
#mean_agegrp = sum(AGEGRP * TOT_POP, na.rm = TRUE) / sum(TOT_POP, na.rm = TRUE),
AvgAge = sum(((AGEGRP - 1) * 5 + 2) * TOT_POP, na.rm = TRUE) / sum(TOT_POP, na.rm = TRUE)) %>%
rename(State = STNAME, County = CTYNAME) %>%
mutate(State = state.abb[match(`State`, state.name)])
age[is.na(age$State), ]$State <- "DC"
age$AvgAge
hist(age$AvgAge)
age <- read_csv("../raw/cc-est2011-alldata.csv") %>%
select(`STNAME`, `CTYNAME`, `YEAR`, `AGEGRP`, `TOT_POP`) %>%
filter(YEAR == 1) %>%
group_by(STNAME, CTYNAME) %>%
summarize(#agegrp1 = sum(TOT_POP[AGEGRP < 5], na.rm = TRUE) / sum(TOT_POP, na.rm = TRUE),
#agegrp2 = sum(TOT_POP[AGEGRP >= 5 & AGEGRP < 14], na.rm = TRUE) / sum(TOT_POP, na.rm = TRUE),
#agegrp3 = sum(TOT_POP[AGEGRP >= 14], na.rm = TRUE) / sum(TOT_POP, na.rm = TRUE),
mean_agegrp = sum(AGEGRP * TOT_POP, na.rm = TRUE) / sum(TOT_POP, na.rm = TRUE),
AvgAge = sum(((AGEGRP - 1) * 5 + 2) * TOT_POP, na.rm = TRUE) / sum(TOT_POP, na.rm = TRUE)) %>%
rename(State = STNAME, County = CTYNAME) %>%
mutate(State = state.abb[match(`State`, state.name)])
age[is.na(age$State), ]$State <- "DC"
hist(age$mean_agegrp)
hist(age$AvgAge, breaks = 1000)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
indent1 = '    '
indent2 = paste(rep(indent1, 2), collapse='')
indent3 = paste(rep(indent1, 3), collapse='')
doeval = TRUE
doecho = FALSE
library(knitr)
library(tidyverse)
state.name <- c(state.name, "District of Columbia", "Puerto Rico")
state.abb <- c(state.abb, "DC", "PR")
## read in census data
census <- read_csv("../data/acs2017_county_data.csv") %>% select(-CountyId, - VotingAgeCitizen, -ChildPoverty, -Income, -IncomeErr, -IncomePerCap, -IncomePerCapErr, -Employed) %>%
mutate(State = state.abb[match(`State`, state.name)]) %>%
filter(State != "PR") #remove Puerto Rico
head(census)
filter(census, !complete.cases(census))
## read in education data
education <- read_csv("../data/education.csv") %>%
filter(!is.na(`2003 Rural-urban Continuum Code`)) %>%
filter(State != "PR") %>%
select(-`FIPS Code`,
-`2003 Rural-urban Continuum Code`,
-`2003 Urban Influence Code`,
-`2013 Rural-urban Continuum Code`,
-`2013 Urban Influence Code`) %>%
rename(County = `Area name`) %>%
select(`State`, `County`,
#         `Less than a high school diploma, 2015-19`,
#         `High school diploma only, 2015-19`,
#         `Bachelor's degree or higher, 2015-19`,
LessThanHighSchool = `Percent of adults with less than a high school diploma, 2015-19`,
HighSchoolDiploma = `Percent of adults with a high school diploma only, 2015-19`,
SomeCollegeOrAssociateDegree = `Percent of adults completing some college or associate's degree, 2015-19`,
BachelorDegreeOrHigher = `Percent of adults with a bachelor's degree or higher, 2015-19`) %>%
mutate(EduSum = LessThanHighSchool + HighSchoolDiploma + SomeCollegeOrAssociateDegree + BachelorDegreeOrHigher) %>%
mutate(LessThanHighSchool = LessThanHighSchool * 100 / EduSum,
HighSchoolDiploma = HighSchoolDiploma * 100 / EduSum,
SomeCollegeOrAssociateDegree = SomeCollegeOrAssociateDegree * 100 / EduSum,
BachelorDegreeOrHigher = BachelorDegreeOrHigher * 100 / EduSum) %>%
select(-EduSum)
colnames(education)
head(education)
filter(education, !complete.cases(education))
age_coding = c("1 = Age 0 to 4 years",
"2 = Age 5 to 9 years",
"3 = Age 10 to 14 years",
"4 = Age 15 to 19 years",
"5 = Age 20 to 24 years",
"6 = Age 25 to 29 years",
"7 = Age 30 to 34 years",
"8 = Age 35 to 39 years",
"9 = Age 40 to 44 years",
"10 = Age 45 to 49 years",
"11 = Age 50 to 54 years",
"12 = Age 55 to 59 years",
"13 = Age 60 to 64 years",
"14 = Age 65 to 69 years",
"15 = Age 70 to 74 years",
"16 = Age 75 to 79 years",
"17 = Age 80 to 84 years",
"18 = Age 85 years or older")
print(age_coding)
age <- read_csv("../raw/cc-est2011-alldata.csv") %>%
select(`STNAME`, `CTYNAME`, `YEAR`, `AGEGRP`, `TOT_POP`) %>%
filter(YEAR == 1) %>%
group_by(STNAME, CTYNAME) %>%
summarize(#agegrp1 = sum(TOT_POP[AGEGRP < 5], na.rm = TRUE) / sum(TOT_POP, na.rm = TRUE),
#agegrp2 = sum(TOT_POP[AGEGRP >= 5 & AGEGRP < 14], na.rm = TRUE) / sum(TOT_POP, na.rm = TRUE),
#agegrp3 = sum(TOT_POP[AGEGRP >= 14], na.rm = TRUE) / sum(TOT_POP, na.rm = TRUE),
#mean_agegrp = sum(AGEGRP * TOT_POP, na.rm = TRUE) / sum(TOT_POP, na.rm = TRUE),
AvgAge = sum(((AGEGRP - 1) * 5 + 2) * TOT_POP, na.rm = TRUE) / sum(TOT_POP, na.rm = TRUE)) %>%
rename(State = STNAME, County = CTYNAME) %>%
mutate(State = state.abb[match(`State`, state.name)])
age[is.na(age$State), ]$State <- "DC"
# left joining census with education
combined <- left_join(census, education, by = c("State", "County"))
head(combined)
filter(combined, !complete.cases(combined))
# left joining census with education
combined_all <- left_join(combined, age, by = c("State", "County"))
filter(combined_all, !complete.cases(combined_all))
df <- relocate(combined_all, State, County, Poverty)
filter(df, TotalPop != Men + Women)
df <- mutate(df, OriginSum = Hispanic + White + Black + Native + Asian + Pacific) %>%
mutate(Hispanic = Hispanic * 100 / OriginSum,
White = White * 100 / OriginSum,
Black = Black * 100 / OriginSum,
Native = Native * 100 / OriginSum,
Asian = Asian * 100 / OriginSum,
Pacific = Pacific * 100 / OriginSum) %>%
select(-OriginSum)
df <- mutate(df, OccupationSum = Professional + Service + Office + Construction + Production) %>%
mutate(Professional = Professional * 100 / OccupationSum,
Service = Service * 100 / OccupationSum,
Office = Office * 100 / OccupationSum,
Construction = Construction * 100 / OccupationSum,
Production = Production * 100 / OccupationSum) %>%
select(-OccupationSum)
df <- mutate(df, TranSum = Drive + Carpool + Transit + Walk + OtherTransp + WorkAtHome) %>%
mutate(Drive = Drive * 100 / TranSum,
Carpool = Carpool * 100 / TranSum,
Transit = Transit * 100 / TranSum,
Walk = Walk * 100 / TranSum,
OtherTransp = OtherTransp * 100 / TranSum,
WorkAtHome = WorkAtHome * 100 / TranSum) %>%
select(-TranSum)
df <- mutate(df, EmpSum = PrivateWork + PublicWork + SelfEmployed + FamilyWork) %>%
mutate(PrivateWork = PrivateWork * 100 / EmpSum,
PublicWork = PublicWork * 100 / EmpSum,
SelfEmployed = SelfEmployed * 100 / EmpSum,
FamilyWork = FamilyWork * 100 / EmpSum) %>%
select(-EmpSum)
## read in meta data
metadata <- read_csv("../data/metadata.csv")
kable(metadata[, 1:2], "latex")
print(metadata, n = nrow(metadata))
write.csv(df, file = "./220.csv")
df
range(df$Men + df$Women - df$TotalPop)
range(df$Hispanic + df$White + df$Black + df$Native + df$Asian + df$Pacific)
range(df$Professional + df$Service + df$Office + df$Construction + df$Production)
range(df$Drive + df$Carpool + df$Transit + df$Walk + df$OtherTransp + df$WorkAtHome)
summary(MeanCommute)
summary(df$MeanCommute)
range(df$PrivateWork + df$PublicWork + df$SelfEmployed + df$FamilyWork + df$Unemployment)
range(df$PrivateWork + df$PublicWork + df$SelfEmployed + df$FamilyWork)
range(df$LessThanHighSchool + df$HighSchoolDiploma + df$SomeCollegeOrAssociateDegree + df$BachelorDegreeOrHigher)
summary(df$LessThanHighSchool + df$HighSchoolDiploma + df$SomeCollegeOrAssociateDegree + df$BachelorDegreeOrHigher)
summary(df$AvgAge)
unlink('Desktop/220Qual/220data/mine/poverty_cache', recursive = TRUE)
unlink('Desktop/220Qual/220data/mine/poverty_cache', recursive = TRUE)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
indent1 = '    '
indent2 = paste(rep(indent1, 2), collapse='')
indent3 = paste(rep(indent1, 3), collapse='')
doeval = TRUE
doecho = FALSE
library(knitr)
library(tidyverse)
state.name <- c(state.name, "District of Columbia", "Puerto Rico")
state.abb <- c(state.abb, "DC", "PR")
## read in census data
census <- read_csv("../data/acs2017_county_data.csv") %>% select(-CountyId, - VotingAgeCitizen, -ChildPoverty, -Income, -IncomeErr, -IncomePerCap, -IncomePerCapErr, -Employed) %>%
mutate(State = state.abb[match(`State`, state.name)]) %>%
filter(State != "PR") #remove Puerto Rico
head(census)
filter(census, !complete.cases(census))
## read in education data
education <- read_csv("../data/education.csv") %>%
filter(!is.na(`2003 Rural-urban Continuum Code`)) %>%
filter(State != "PR") %>%
select(-`FIPS Code`,
-`2003 Rural-urban Continuum Code`,
-`2003 Urban Influence Code`,
-`2013 Rural-urban Continuum Code`,
-`2013 Urban Influence Code`) %>%
rename(County = `Area name`) %>%
select(`State`, `County`,
#         `Less than a high school diploma, 2015-19`,
#         `High school diploma only, 2015-19`,
#         `Bachelor's degree or higher, 2015-19`,
LessThanHighSchool = `Percent of adults with less than a high school diploma, 2015-19`,
HighSchoolDiploma = `Percent of adults with a high school diploma only, 2015-19`,
SomeCollegeOrAssociateDegree = `Percent of adults completing some college or associate's degree, 2015-19`,
BachelorDegreeOrHigher = `Percent of adults with a bachelor's degree or higher, 2015-19`) %>%
mutate(EduSum = LessThanHighSchool + HighSchoolDiploma + SomeCollegeOrAssociateDegree + BachelorDegreeOrHigher) %>%
mutate(LessThanHighSchool = LessThanHighSchool * 100 / EduSum,
HighSchoolDiploma = HighSchoolDiploma * 100 / EduSum,
SomeCollegeOrAssociateDegree = SomeCollegeOrAssociateDegree * 100 / EduSum,
BachelorDegreeOrHigher = BachelorDegreeOrHigher * 100 / EduSum) %>%
select(-EduSum)
colnames(education)
head(education)
filter(education, !complete.cases(education))
age_coding = c("1 = Age 0 to 4 years",
"2 = Age 5 to 9 years",
"3 = Age 10 to 14 years",
"4 = Age 15 to 19 years",
"5 = Age 20 to 24 years",
"6 = Age 25 to 29 years",
"7 = Age 30 to 34 years",
"8 = Age 35 to 39 years",
"9 = Age 40 to 44 years",
"10 = Age 45 to 49 years",
"11 = Age 50 to 54 years",
"12 = Age 55 to 59 years",
"13 = Age 60 to 64 years",
"14 = Age 65 to 69 years",
"15 = Age 70 to 74 years",
"16 = Age 75 to 79 years",
"17 = Age 80 to 84 years",
"18 = Age 85 years or older")
print(age_coding)
age <- read_csv("../raw/cc-est2011-alldata.csv") %>%
select(`STNAME`, `CTYNAME`, `YEAR`, `AGEGRP`, `TOT_POP`) %>%
filter(YEAR == 1) %>%
group_by(STNAME, CTYNAME) %>%
summarize(#agegrp1 = sum(TOT_POP[AGEGRP < 5], na.rm = TRUE) / sum(TOT_POP, na.rm = TRUE),
#agegrp2 = sum(TOT_POP[AGEGRP >= 5 & AGEGRP < 14], na.rm = TRUE) / sum(TOT_POP, na.rm = TRUE),
#agegrp3 = sum(TOT_POP[AGEGRP >= 14], na.rm = TRUE) / sum(TOT_POP, na.rm = TRUE),
#mean_agegrp = sum(AGEGRP * TOT_POP, na.rm = TRUE) / sum(TOT_POP, na.rm = TRUE),
AvgAge = sum(((AGEGRP - 1) * 5 + 2) * TOT_POP, na.rm = TRUE) / sum(TOT_POP, na.rm = TRUE)) %>%
rename(State = STNAME, County = CTYNAME) %>%
mutate(State = state.abb[match(`State`, state.name)])
age[is.na(age$State), ]$State <- "DC"
# left joining census with education
combined <- left_join(census, education, by = c("State", "County"))
head(combined)
filter(combined, !complete.cases(combined))
# left joining census with education
combined_all <- left_join(combined, age, by = c("State", "County"))
filter(combined_all, !complete.cases(combined_all))
df <- relocate(combined_all, State, County, Poverty)
filter(df, TotalPop != Men + Women)
df <- mutate(df, OriginSum = Hispanic + White + Black + Native + Asian + Pacific) %>%
mutate(Hispanic = Hispanic * 100 / OriginSum,
White = White * 100 / OriginSum,
Black = Black * 100 / OriginSum,
Native = Native * 100 / OriginSum,
Asian = Asian * 100 / OriginSum,
Pacific = Pacific * 100 / OriginSum) %>%
select(-OriginSum)
df <- mutate(df, OccupationSum = Professional + Service + Office + Construction + Production) %>%
mutate(Professional = Professional * 100 / OccupationSum,
Service = Service * 100 / OccupationSum,
Office = Office * 100 / OccupationSum,
Construction = Construction * 100 / OccupationSum,
Production = Production * 100 / OccupationSum) %>%
select(-OccupationSum)
df <- mutate(df, TranSum = Drive + Carpool + Transit + Walk + OtherTransp + WorkAtHome) %>%
mutate(Drive = Drive * 100 / TranSum,
Carpool = Carpool * 100 / TranSum,
Transit = Transit * 100 / TranSum,
Walk = Walk * 100 / TranSum,
OtherTransp = OtherTransp * 100 / TranSum,
WorkAtHome = WorkAtHome * 100 / TranSum) %>%
select(-TranSum)
df <- mutate(df, EmpSum = PrivateWork + PublicWork + SelfEmployed + FamilyWork) %>%
mutate(PrivateWork = PrivateWork * 100 / EmpSum,
PublicWork = PublicWork * 100 / EmpSum,
SelfEmployed = SelfEmployed * 100 / EmpSum,
FamilyWork = FamilyWork * 100 / EmpSum) %>%
select(-EmpSum)
write.csv(df, file = "./220.csv")
# Compute monthly payment
compute_monthly <- function(price, down_payment, rate, term){
tax <- price * 1.15 / 100 / 12
premium <- price - down_payment
# assuming monthly payment
r <- rate / 12
t <- term * 12
# monthly payment
pi_month <- premium * r * (1 + r)^t / ((1 + r)^t - 1)
pi_total <- pi_month * t
interest <- pi_total - premium
cat("Monthly Principal & Interest: ", pi_month, fill = TRUE)
cat("Monthly Total: ", tax + 350 + pi_month, fill = TRUE)
cat("Total Principal & Interest: ", pi_total, fill = TRUE)
cat("Total Interest: ", interest, fill = TRUE)
# return(list(payment_month = payment_month,
#             payment_total = payment_total,
#             interest = interest))
}
# Generate Amortization Schedule
# Each monthly payment consists of principal and interest
# In the begining, most of the payment is for interest
# In the end of the loan period, most of the payment is for principal
amortize_schedule <- function(premium, rate, term){
# I used the formula of amortization schedule here:
# https://www.fool.com/the-ascent/personal-finance/how-is-loan-amortization-schedule-calculated/
# assuming monthly payment
r <- rate / 12
t <- term * 12
# monthly payment
payment_month <- premium * r * (1 + r)^t / ((1 + r)^t - 1)
balance <- premium
schedule <- data.frame(matrix(0, nrow = t, ncol = 6))
colnames(schedule) <- c("Interest(Month)", "Interest(Total)", "Principal(Month)", "Principal(Total)", "Principal(Balance)", "Payment(Total)")
for(i in seq(t)){
schedule[i, 'Interest(Month)'] <- balance * r
schedule[i, 'Interest(Total)'] <- sum(schedule[1:i, 'Interest(Month)'])
schedule[i, 'Principal(Month)'] <- payment_month - schedule[i, 'Interest(Month)']
balance <- balance - schedule[i, 'Principal(Month)']
schedule[i, 'Principal(Balance)'] <- balance
schedule[i, 'Principal(Total)'] <- sum(schedule[1:i, 'Principal(Month)'])
schedule[i, 'Payment(Total)'] <- payment_month * i
}
#return(format(round(schedule, 2), nsmall = 2))
return(schedule)
}
# Plot both monthly and cumulative visual decomposition
plot_schedule <- function(schedule, month_range = NULL, rate){
main_string_to_add <- paste0(" (Rate: ", rate, "  Term: ", nrow(schedule), " months)", sep = "")
if(is.null(month_range))
month_range <- 1:nrow(schedule)
payment_month <- schedule[1, 'Interest(Month)'] + schedule[1, 'Principal(Month)']
# monthly analysis
plot(1, type = "n", xlab = "Month", ylab = "Payment",
xlim = c(0, max(month_range)), ylim=c(0, payment_month),
main = paste0("Monthly Payment Decomposition", main_string_to_add, sep = ""))
lines(schedule[month_range, 'Interest(Month)'],
type = "l", col = "Red", lwd = 2, lty =2)
lines(schedule[month_range, 'Principal(Month)'],
type = "l", col = "Blue", lwd = 2, lty =3)
legend("topleft", c("Interest", "Principal"),
col = c("Red", "Blue"), lwd = c(2, 2), lty = c(2, 3))
# cumulative analysis
ymax <- max(schedule[month_range, ])
plot(1, type = "n", xlab = "Month", ylab = "Payment",
xlim = c(0, max(month_range)), ylim = c(0, ymax),
main = paste0("Cumulative Payment Decomposition", main_string_to_add, sep = ""))
lines(schedule[month_range, 'Interest(Total)'],
type = "l", col = "Red", lwd = 2, lty =2)
lines(schedule[month_range, 'Principal(Total)'],
type = "l", col = "Blue", lwd = 2, lty =3)
lines(schedule[month_range, 'Payment(Total)'],
type = "l", col = "Black", lwd = 2, lty =4)
legend("topleft", c("Interest", "Principal", "Payment"),
col = c("Red", "Blue", "Black"), lwd = c(2, 2, 2), lty = c(2, 3, 4))
}
## Main Analysis
# Assumption 1: 1M house
price <- 1000000
# Assumption 2: 500K DP
dp <- 500000
# rate30 <- 3 / 100
# rate30 <- 2.625 / 100
#
# # Option 1 (30 yrs):
# dp <- 500000
# compute_monthly(price = price, down_payment = dp,
#                 rate = rate30, term = 30)
#
# A <- amortize_schedule(premium = price - dp, rate = rate30, term = 30)
# plot_schedule(A, rate = rate30)
# Option 2 (15 yrs):
# Assumption 3: 15-years rate = 0.025
rate15 <- 2.5 / 100
compute_monthly(price = price, down_payment = dp,
rate = rate15, term = 15)
rate15 <- 2.375 / 100
compute_monthly(price = price, down_payment = dp,
rate = rate15, term = 15)
compute_monthly(price = price, down_payment = dp,
rate = rate15, term = 15)
rate15 <- 2.25 / 100
compute_monthly(price = price, down_payment = dp,
rate = rate15, term = 15)
rate15 <- 2.125 / 100
compute_monthly(price = price, down_payment = dp,
rate = rate15, term = 15)
compute_monthly(price = price, down_payment = dp,
rate = rate15, term = 15)
rate15 <- 2 / 100
compute_monthly(price = price, down_payment = dp,
rate = rate15, term = 15)
# Option 2 (15 yrs):
# Assumption 3: 15-years rate = 0.025
rate15 <- 2.5 / 100
compute_monthly(price = price, down_payment = dp,
rate = rate15, term = 15)
A <- amortize_schedule(premium = price - dp, rate = rate15, term = 15)
A[60, ]
rate15 <- 2 / 100
compute_monthly(price = price, down_payment = dp,
rate = rate15, term = 15)
A <- amortize_schedule(premium = price - dp, rate = rate15, term = 15)
A[60, ]
compute_monthly(price = price, down_payment = dp,
rate = rate15, term = 15)
# Option 2 (15 yrs):
# Assumption 3: 15-years rate = 0.025
rate15 <- 2.5 / 100
compute_monthly(price = price, down_payment = dp,
rate = rate15, term = 15)
rate15 <- 2.125 / 100
compute_monthly(price = price, down_payment = dp,
rate = rate15, term = 15)
setwd("~/Desktop/Numerical_studies/interactionnew/binary/binary_simulation")
rm(list = ls())
library(simulator)
library(RColorBrewer)
source("../../plot_functions.R")
sim_name <- "binary"
metric_name <- "mse_pred"
sim <- load_simulation(name = sim_name) %>%
subset_simulation(methods = c("sprinter",
"SIS", "IP", "APL", "MEL"))
sim
source('~/Desktop/Numerical_studies/interactionnew/binary/binary_simulation/plot_binary.R', echo=TRUE)
source('~/Desktop/Numerical_studies/interactionnew/binary/binary_simulation/plot_binary.R', echo=TRUE)
