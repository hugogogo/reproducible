library(npnve)
out <- nlasso_cv(x = train[, -1], y = train[, 1])
out <- nlasso_cv(x = matrix(train[, -1]), y = as.numeric(train[, 1]))
matrix(train[, -1])
train <- dat[index, ]
train
train[, -1]
as.matrix(train[, -1])
matrix(train[, -1])
out <- nlasso_cv(x = as.matrix(train[, -1]), y = as.numeric(train[, 1]))
out$sig_obj
out$sig_naive
out$sig_df
ol_out <- olasso_cv(x = as.matrix(train[, -1]), y = as.numeric(train[, 1]))
ol_out$sig_obj
sigma
ol_out$sig_naive
ol_out$sig_df
ol_out$sig_df
ol_out$sig_obj
nl_out <- nlasso_cv(x = as.matrix(train[, -1]), y = as.numeric(train[, 1]))
nl_out
nl_out$sig_obj
nl_out$sig_naive
nl_out$sig_df
Bayati_out <- runBayati(x = as.matrix(train[, -1]), y = as.numeric(train[, 1]))
sl_out <- slasso(x = as.matrix(train[, -1]), y = as.numeric(train[, 1]))
library(lars)
sl_out <- slasso(x = as.matrix(train[, -1]), y = as.numeric(train[, 1]))
sl_out$sig_naive_1
sl_out$sig_naive_2
sl_out$sig_obj_1
n <- 200
set.seed(123)
index <- sample(nrow(dat), n)
train <- dat[index, ]
library(npnve)
nl_out <- nlasso_cv(x = as.matrix(train[, -1]), y = as.numeric(train[, 1]))
ol_out <- olasso_cv(x = as.matrix(train[, -1]), y = as.numeric(train[, 1]))
# invalid estimate
Bayati_out <- runBayati(x = as.matrix(train[, -1]), y = as.numeric(train[, 1]))
library(lars)
sl_out <- slasso(x = as.matrix(train[, -1]), y = as.numeric(train[, 1]))
nl_out$sig_df
nl_out$sig_naive
nl_out$sig_obj
ol_out$sig_df
ol_out$sig_naive
ol_out$sig_obj
sl_out$sig_obj_1
sl_out$sig_obj_2
sl_out$sig_naive_1
sl_out$sig_naive_2
n <- 50
set.seed(123)
index <- sample(nrow(dat), n)
train <- dat[index, ]
library(npnve)
nl_out <- nlasso_cv(x = as.matrix(train[, -1]), y = as.numeric(train[, 1]))
ol_out <- olasso_cv(x = as.matrix(train[, -1]), y = as.numeric(train[, 1]))
# invalid estimate
Bayati_out <- runBayati(x = as.matrix(train[, -1]), y = as.numeric(train[, 1]))
library(lars)
sl_out <- slasso(x = as.matrix(train[, -1]), y = as.numeric(train[, 1]))
n <- 80
set.seed(123)
index <- sample(nrow(dat), n)
train <- dat[index, ]
library(npnve)
nl_out <- nlasso_cv(x = as.matrix(train[, -1]), y = as.numeric(train[, 1]))
ol_out <- olasso_cv(x = as.matrix(train[, -1]), y = as.numeric(train[, 1]))
# invalid estimate
Bayati_out <- runBayati(x = as.matrix(train[, -1]), y = as.numeric(train[, 1]))
library(lars)
sl_out <- slasso(x = as.matrix(train[, -1]), y = as.numeric(train[, 1]))
nl_out$sig_df
nl_out$sig_naive
nl_out$sig_obj
nl_out <- nlasso_cv(x = as.matrix(train[, -1]), y = as.numeric(train[, 1]), flmin = 1e-4)
nl_out$sig_obj
nl_out$sig_naive
nl_out$sig_obj
ol_out$sig_obj
ol_out$sig_naive
ol_out$sig_df
sigma
sl_out$sig_naive_1
sl_out$sig_naive_2
dat <- read.csv("~/Desktop/MyData.csv")
dat
dat$Event17VMIdNumber
sum(dat$Event17VMIdNumber != 0)
sum(dat$Event17VMIdNumber != 0) / nrow(dat$Event17VMIdNumber)
sum(dat$Event17VMIdNumber != 0)
sum(dat$Event17VMIdNumber != 0) / length(dat$Event17VMIdNumber)
n <- nrow(dat)
nnz <- length(dat$Event17VMIdNumber != 0)
n
nnz
nnz <- sum(dat$Event17VMIdNumber != 0)
nnz
e17 <- which(dat$Event17VMIdNumber != 0)
e17
good <- which(dat$Event17VMIdNumber == 0)
good
sample(x = e17, size = 3)
nfold <- 5
sample(seq(nfold), size = n, replace = TRUE)
sample(seq(nfold), size = length(good), replace = TRUE)
foldid <- rep(NA, n)
foldid[e17] <- sample(seq(nfold), size = length(e17), replace = TRUE)
foldid[good] <- sample(seq(nfold), size = length(good), replace = TRUE)
foldid
foldid[e17]
source('~/Desktop/DeepView.R', echo=TRUE)
rawData
result <- run_TOR_Str(rawData)
source('~/Desktop/DeepView.R', echo=TRUE)
install.packages("nnls")
source('~/Desktop/DeepView.R', echo=TRUE)
rawData <- read.csv("~/Desktop/MyData.csv")
result <- run_TOR_Str(rawData)
result <- run_TOR_Str(rawData)
rawData$FullPath
result <- run_TOR_Str(rawData)
source('~/Desktop/DeepView.R', echo=TRUE)
trsplit(rawData$FullPath, split = ";")
strsplit(rawData$FullPath, split = ";")
rawData$FullPath
strsplit(rawData$FullPath, split = ";")
?strsplit
levels(rawData$FullPath) <- NULL
as.character(rawData$FullPath)
strsplit(as.character(rawData$FullPath), ";")
source('~/Desktop/DeepView.R', echo=TRUE)
source('~/Desktop/DeepView.R', echo=TRUE)
source('~/Desktop/DeepView.R', echo=TRUE)
source('~/Desktop/DeepView.R', echo=TRUE)
source('~/Desktop/DeepView.R', echo=TRUE)
result
source('~/Desktop/DeepView.R', echo=TRUE)
result
source('~/Desktop/DeepView.R', echo=TRUE)
source('~/Desktop/DeepView.R', echo=TRUE)
result
source('~/Desktop/DeepView.R', echo=TRUE)
result
source('~/Desktop/DeepView.R', echo=TRUE)
result
source('~/Desktop/DeepView.R', echo=TRUE)
result
2.59 + 3.37
5.96 + 1.95
2.27 + 5
7.27 - 5.96
2.59 + 3.37 + 1.72
3.37 + 2. 58
3.37 + 2.59
x <- rnorm(10)
y <- 5*x + rnorm(10)
y
lm(y~x, data = cbind(x, y))
lm(y~x, data = data.frame(y = y, x = x))
mod1 <- lm(y~x, data = data.frame(y = y, x = x))
mod2 <- lm(x ~ y, data = data.frame(y = y, x= x))
mod1
summary(mod1)
summary(mod2)
z = rnorm(10)
mod1 <- lm(y~x + z, data = data.frame(y = y, x = x, z = z))
mod2 <- lm(x ~ y + z, data = data.frame(y = y, x= x, z = z))
summary(mod1)
summary(mod2)
y = 5 * x + 0.1 * z + rnorm(10)
mod1 <- lm(y~x + z, data = data.frame(y = y, x = x, z = z))
mod2 <- lm(x ~ y + z, data = data.frame(y = y, x= x, z = z))
summary(mod1)
summary(mod2)
library(simulator) # this file was created under simulator version 0.2.0
library(simulator) # this file was created under simulator version 0.2.0
?run_method_parallel
library(simulator)
library(simulator)
library(parallel)
pnorm(1)
pnorm(2)
pnorm(10/6)
1 - pnorm(10/6)
log(142, base = 2)
0.03 * (0.98^2)
a <- 0.03 * (0.98^2)
b <- 0.97 * (0.04^2)
b
a / (a + b)
18000/4*50
0.23 + 0.57 + 1.72
0.23 + 0.57 + 1.72 + 1.2
x = (1, 2, 5, 3, 0)
x = c(1, 2, 5, 3, 0)
y = c(0.3, 0.6, 0.8, 0.2, 0.1)
cor(x, y)
?cor
sim <- load_simulation(name = "relerr_fix")
rm(list = ls())
library(simulator) # this file was created under simulator version 0.2.0
library(ggplot2)
library(scalreg)
library(npnve)
source("model_functions.R")
source("method_functions.R")
source("eval_functions.R")
setwd("~/Desktop/sim_Bayati_and_fix")
rm(list = ls())
library(simulator) # this file was created under simulator version 0.2.0
library(ggplot2)
library(scalreg)
library(npnve)
source("model_functions.R")
source("method_functions.R")
source("eval_functions.R")
sim <- load_simulation(name = "relerr_fix")
sim
sim <- load_simulation(name = "relerr_cv")
sim
sim
sim <- load_simulation(name = "setup")
sim
sim <- load_simulation(name = "setup") %>%
rename("more_fix_setup") %>% relabel("more_fix_setup") %>%
subset_simulation(methods = list(ol_fix, sl_fix))
sim
sim <- load_simulation(name = "setup") %>%
rename("more_fix_setup") %>% relabel("more_fix_setup") %>%
subset_simulation(methods = c("ol_fix", "sl_fix"))
sim
sim <- load_simulation(name = "setup") %>%
rename("more_fix_setup") %>% relabel("more_fix_setup") %>%
subset_simulation(methods = c("ol_fix", "sl_fix")) %>%
subset_simulation(alpha %in% c(0.1, 0.3, 0.5, 0.7, 0.9) & rho %in% c(0.3, 0.6, 0.9))
sim
source('~/Desktop/sim_Bayati_and_fix/main.R', echo=TRUE)
library(simulator2) # this file was created under simulator version 0.2.0
sim
sim_sub <- subset_simulation(sim, index = c(1, 3:10))
sim_sub
sim
sim_sub
save_simulation(sim)
sim_sub <- subset_simulation(sim, index = c(1, 2:10))
sim_sub
sim <- subset_simulation(sim, index = c(1, 2:10))
sim
save_simulation(sim)
sim <- load_simulation("more_fix_setup")
sim
sim <- load_simulation("more_fix_setup") %>%
subset_simulation(methods = "") %>%
rename("more_fix") %>% relabel("more_fix") %>%
run_method(list(sl_fix + naive_1,
sl_fix + naive_2,
ol_fix + obj_1,
ol_fix_guess + obj_1,
ol_fix_guess + obj_2,
oracle))
sim
sim <- evaluate(sim, metrics = list(mse, ratio))
save_simulation(sim)
sim <- load_simulation("more_fix")
sim
library(simulator2)
rm(list = ls())
sim_name <- "more_fix"
metric_name <- "mse"
sim <- load_simulation(name = sim_name)
sim
source('~/Desktop/sim_Bayati_and_fix/plot_for_paper.R', echo=TRUE)
sim_sub <- subset_simulation(sim, snr == 0.3 & rho == 0.6)
pl_3 <- plot_eval_by(sim = sim_sub,
metric_name = metric_name,
spread_aggregator = FALSE,
type = "aggregated",
varying = "alpha",
use_ggplot2 = FALSE,
main = expression(list(tau == 0.3, rho == 0.6)),
xlab = xlab,
xaxt = "n",
ylab = ylab,
method_col = col_seq,
method_lty = lty_seq,
method_lwd = lwd_seq,
method_pch = pch_seq,
legend_location = NULL,
ylim = ylim)
library(simulator2)
library(simulator2)
library(simulator)
library(simulator2)
source('~/Desktop/sim_Bayati_and_fix/plot_for_paper.R', echo=TRUE)
library(simulator2)
library(simulator2)
source('~/Desktop/sim_Bayati_and_fix/plot_for_paper.R', echo=TRUE)
source('~/Desktop/sim_Bayati_and_fix/plot_for_paper.R', echo=TRUE)
source('~/Desktop/sim_Bayati_and_fix/plot_for_paper.R', echo=TRUE)
?plot_eval_by
source('~/Desktop/sim_Bayati_and_fix/plot_for_paper.R', echo=TRUE)
setwd("~/Desktop/Simulation/natural_lasso/sim_Bayati_and_fix")
source('~/Desktop/Simulation/natural_lasso/sim_Bayati_and_fix/plot_for_paper.R', echo=TRUE)
sim
### Changing rho ######
sim_name <- "relerr_fix"
metric_name <- "mse"
sim <- load_simulation(name = sim_name)
sim
### Changing rho ######
sim_name <- "relerr_fix_guess"
metric_name <- "mse"
sim <- load_simulation(name = sim_name)
sim
source('~/Desktop/Simulation/natural_lasso/sim_Bayati_and_fix/plot_for_paper.R', echo=TRUE)
rm(list = ls())
library(simulator)
### Changing rho ######
sim_name <- "relerr_fix_guess"
metric_name <- "mse"
sim <- load_simulation(name = sim_name)
# construct a median aggregator
pdf(file = "a.pdf", width = 10, height = 7)
mat <- matrix(c(1, 4, 2, 5, 3, 6), 2)
layout(mat, c(9.7, 9, 9.01), c(1, 1, 1))
par(cex.main = 1.6, cex.lab = 1.6, cex.axis = 1.2)
ylab <- "Mean squared error"
xlab <- expression(alpha)
col_seq <- c(3, 4, 1, 5, 2, 6)
lty_seq <- c(5, 1, 3, 4, 2, 6)
lwd_seq <- rep(2, 6)
pch_seq <- c(19, 15, 3, 4, 17, 6)
hor_y <- 1
par(mar = c(2, 5, 2, 0))
ylim <- c(0, 0.07)
sim_sub <- subset_simulation(sim, snr == 1 & rho == 0.3)
sim
subset_simulation(sim, snr == 1)
subset_simulation(sim, subset = 1)
subset_simulation(sim, rho == 0.3)
sim
load("/Users/hugo/Desktop/Simulation/natural_lasso/sim_Bayati_and_fix/files/slm/alpha_0.1/p_500/rho_0.1/snr_0.3/model.Rdata")
load("/Users/hugo/Desktop/Simulation/natural_lasso/sim_Bayati_and_fix/files/slm/alpha_0.1/p_500/rho_0.1/snr_0.3/model.Rdata")
model(sim)
sim
rm(list = ls())
library(simulator)
### Changing rho ######
sim_name <- "relerr_fix_guess"
metric_name <- "mse"
sim <- load_simulation(name = sim_name)
sim
model(sim)
81 + 3 * 9
sim_sub <- subset_simulation(sim, 108:(108+9))
sim_sub <- subset_simulation(sim, 108)
sim
subset_simulation(sim, 1)
rm(list = ls())
library(simulator)
### Changing rho ######
sim_name <- "more_fix"
metric_name <- "mse"
sim <- load_simulation(name = sim_name)
sim
model(sim)
load("/Users/hugo/Desktop/Simulation/natural_lasso/sim_Bayati_and_fix/files/slm/alpha_0.1/p_500/rho_0.1/snr_0.3/model.Rdata")
load("/Users/hugo/Desktop/Simulation/natural_lasso/sim_Bayati_and_fix/files/slm/alpha_0.1/p_500/rho_0.1/snr_0.3/model.Rdata")
model
model@params
info
setwd("~/Desktop/Simulation/natural_lasso/sim_Bayati_and_fix")
rm(list = ls())
library(simulator)
### Changing rho ######
sim_name <- "relerr_fix_guess"
metric_name <- "mse"
sim <- load_simulation(name = sim_name)
sim
model(sim)
sim_setup_new <- load_simulation(name = "setup", dir = "./") %>%
#  subset_simulation(rho %in% c(0.3, 0.6, 0.9) & alpha %in% c(0.1, 0.3, 0.5, 0.7, 0.9)) %>%
#  rename("relerr_cv_with_slasso") %>% relabel("Relative Errors with CV (including sqrt lasso)") %>%
#  run_method(list(sl_cv))
# ## simulation on comparison of estimation methods using cross-validation
# sim_cv <- load_simulation(name = "setup", dir = "./") %>%
#   subset_simulation(methods = "") %>%
#   rename("relerr_cv") %>% relabel("Relative Errors with CV") %>%
#   run_method(list(nl_cv + obj, nl_cv + naive, nl_cv + df,
#                   ol_cv + obj, oracle))
# save_simulation(sim_cv)
# sim_cv <- load_simulation(name = "relerr_cv", dir = "./") %>%
#   evaluate(list(mse, ratio))
# save_simulation(sim_cv)
# ## simulation on comparison of estimation methods using predefined value of lambda
# sim_fix <- load_simulation(name = "setup", dir = "./") %>%
#   subset_simulation(methods = "") %>%
#   rename("relerr_fix") %>% relabel("Relative Errors without CV") %>%
#   run_method(list(sl_fix + naive_1,
#                   sl_fix + naive_2,
#                   ol_fix + obj_1,
#                   oracle))
# save_simulation(sim_fix)
# sim_fix <- load_simulation(name = "relerr_fix") %>% evaluate(list(mse, ratio))
# save_simulation(sim_fix)
sim <- load_simulation(name = "setup") %>%
rename("more_fix_setup") %>% relabel("more_fix_setup") %>%
subset_simulation(methods = c("ol_fix", "sl_fix")) %>%
subset_simulation(alpha %in% c(0.1, 0.3, 0.5, 0.7, 0.9) & rho %in% c(0.3, 0.6, 0.9)) %>%
simulate_from_model(nsim = 100, index = 1:10) %>%
run_method(list(ol_fix, ol_fix_guess, sl_fix))
# This is the main simulator file
rm(list = ls())
library(simulator) # this file was created under simulator version 0.2.0
library(ggplot2)
library(scalreg)
library(npnve)
source("model_functions.R")
source("method_functions.R")
source("eval_functions.R")
install.packages("distr")
# This is the main simulator file
rm(list = ls())
library(simulator) # this file was created under simulator version 0.2.0
library(ggplot2)
library(scalreg)
library(npnve)
library(natural)
source("model_functions.R")
source("method_functions.R")
source("eval_functions.R")
p <- 500
alpha_list <- as.list(seq(9) / 10)
rho_list <- as.list(seq(9) / 10)
snr_list <- as.list(c(0.3, 1, 3))
nsim <- 100
sim_setup_new <- load_simulation(name = "setup", dir = "./") %>%
rename("try") %>% relabel("try") %>%
generate_model(make_sparse_model, seed = 123,
p = p,
alpha = alpha_list,
rho = rho_list,
snr = snr_list,
vary_along = c("alpha", "rho", "snr"))
model(sim)
model(sim_setup_new)
sim_setup_new <- load_simulation(name = "setup", dir = "./")
sim_setup_new
model(sim_setup_new)
sim_new <- load_simulation(name = "relerr_fix_guess", dir = "./")
sim_new
model(sim_new)
rm(list = ls())
library(simulator)
### Changing rho ######
sim_name <- "relerr_fix_guess"
metric_name <- "mse"
sim <- load_simulation(name = sim_name)
model(sim)
source('~/Desktop/Simulation/natural_lasso/sim_Bayati_and_fix copy/plot_for_paper.R', echo=TRUE)
sim <- load_simulation(name = sim_name) %>% subset_simulation(alpha %in% c(0.1, 0.3, 0.5, 0.7, 0.9))
sim
source('~/Desktop/Simulation/natural_lasso/sim_Bayati_and_fix copy/plot_for_paper.R', echo=TRUE)
source('~/Desktop/Simulation/natural_lasso/sim_Bayati_and_fix copy/plot_for_paper.R', echo=TRUE)
source('~/Desktop/Simulation/natural_lasso/sim_Bayati_and_fix copy/plot_for_paper.R', echo=TRUE)
source('~/Desktop/Simulation/natural_lasso/sim_Bayati_and_fix copy/plot_for_paper.R', echo=TRUE)
source('~/Desktop/Simulation/natural_lasso/sim_Bayati_and_fix copy/plot_for_paper.R', echo=TRUE)
source('~/Desktop/Simulation/natural_lasso/sim_Bayati_and_fix copy/plot_for_paper.R', echo=TRUE)
source('~/Desktop/Simulation/natural_lasso/sim_Bayati_and_fix copy/plot_for_paper.R', echo=TRUE)
source('~/Desktop/Simulation/natural_lasso/sim_Bayati_and_fix copy/plot_for_paper.R', echo=TRUE)
source('~/Desktop/Simulation/natural_lasso/sim_Bayati_and_fix copy/plot_for_paper.R', echo=TRUE)
source('~/Desktop/Simulation/natural_lasso/sim_Bayati_and_fix copy/plot_for_paper.R', echo=TRUE)
source('~/Desktop/Simulation/natural_lasso/sim_Bayati_and_fix copy/plot_for_paper.R', echo=TRUE)
source('~/Desktop/Simulation/natural_lasso/sim_Bayati_and_fix copy/plot_for_paper.R', echo=TRUE)
source('~/Desktop/Simulation/natural_lasso/sim_Bayati_and_fix/plot_for_paper.R', echo=TRUE)
source('~/Desktop/Simulation/natural_lasso/sim_Bayati_and_fix/plot_for_paper.R', echo=TRUE)
source('~/Desktop/Simulation/natural_lasso/sim_Bayati_and_fix/plot_for_paper.R', echo=TRUE)
source('~/Desktop/Simulation/natural_lasso/sim_Bayati_and_fix/plot_for_paper.R', echo=TRUE)
source('~/Desktop/Simulation/natural_lasso/sim_Bayati_and_fix/plot_for_paper.R', echo=TRUE)
source('~/Desktop/Simulation/natural_lasso/sim_Bayati_and_fix/plot_for_paper.R', echo=TRUE)
source('~/Desktop/Simulation/natural_lasso/sim_Bayati_and_fix/plot_for_paper.R', echo=TRUE)
setwd("~/Desktop/Simulation/natural_lasso/sim_cv")
source('~/Desktop/Simulation/natural_lasso/sim_cv/plot_for_paper.R', echo=TRUE)
library(simulator)
rm(list = ls())
##### Changing rho ######
sim_name <- "relerr_cv"
metric_name <- "mse"
sim <- load_simulation(name = sim_name)
sim
source('~/Desktop/Simulation/natural_lasso/sim_cv/plot_for_paper.R', echo=TRUE)
library(simulator)
rm(list = ls())
##### Changing rho ######
sim_name <- "combined"
metric_name <- "mse"
sim <- load_simulation(name = sim_name)
sim
##### Changing rho ######
sim_name <- "even_more_cv"
metric_name <- "mse"
sim <- load_simulation(name = sim_name)
sim
source('~/Desktop/Simulation/natural_lasso/sim_cv/plot_for_paper.R', echo=TRUE)
source('~/Desktop/Simulation/natural_lasso/sim_cv/plot_for_paper.R', echo=TRUE)
source('~/Desktop/Simulation/natural_lasso/sim_cv/plot_for_paper.R', echo=TRUE)
source('~/Desktop/Simulation/natural_lasso/sim_cv/plot_for_paper_more.R', echo=TRUE)
source('~/Desktop/Simulation/natural_lasso/sim_cv/plot_for_paper_more.R', echo=TRUE)
